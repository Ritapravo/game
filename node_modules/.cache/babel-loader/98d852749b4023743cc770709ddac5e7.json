{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/my-game/src/components/Green.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport './Board.css';\nimport { x_val, y_val } from \"../functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Green = props => {\n  _s();\n\n  var speed;\n  var z = props.position.z + props.dice_val;\n  const [counter, setCounter] = React.useState(props.position.z);\n  const [moveOn, setMoveOn] = useState(false);\n  React.useEffect(() => {\n    let interval = null;\n\n    if (moveOn) {\n      interval = setInterval(() => {\n        setCounter(prevCounter => prevCounter + 1);\n      }, 400);\n    } else {\n      clearInterval(interval);\n      props.move(setCounter);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [moveOn]);\n\n  if (moveOn && counter === z) {\n    // console.log(\"entered\");\n    setMoveOn(false);\n  }\n\n  const slide = () => {\n    if (z > 100) {\n      props.move();\n      return;\n    }\n\n    console.log(\"clicked & dice_val: \", z);\n    if (props.turn && props.enter_enabled) setMoveOn(true);\n  };\n\n  const Green_marker = {\n    margin: '35% 40% 15% 10%',\n\n    /* margin: 25% 10% 15% 30%; */\n\n    /* position: absolute; */\n    backgroundColor: 'rgb(14, 221, 66)',\n    borderRadius: '50%',\n    border: '1px solid rgb(0, 0, 0)',\n    gridRowStart: x_val(counter),\n    gridColumnStart: y_val(counter) // transition: \"all 2s ease-in\"\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pos1\",\n    style: Green_marker,\n    className: props.turn && props.enter_enabled ? \"blinker1\" : \"\",\n    onClick: slide\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Green, \"IH4nFEc67THUsoARBizXUVtdpL0=\");\n\n_c = Green;\nexport default Green;\n\nvar _c;\n\n$RefreshReg$(_c, \"Green\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/my-game/src/components/Green.js"],"names":["React","useState","x_val","y_val","Green","props","speed","z","position","dice_val","counter","setCounter","moveOn","setMoveOn","useEffect","interval","setInterval","prevCounter","clearInterval","move","slide","console","log","turn","enter_enabled","Green_marker","margin","backgroundColor","borderRadius","border","gridRowStart","gridColumnStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,cAA7B;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,MAAIC,KAAJ;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACG,QAAN,CAAeD,CAAf,GAAmBF,KAAK,CAACI,QAAjC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACC,QAAN,CAAeI,KAAK,CAACG,QAAN,CAAeD,CAA9B,CAA9B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAQ,GAAG,IAAf;;AAEA,QAAIH,MAAJ,EAAY;AACRG,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzBL,QAAAA,UAAU,CAAEM,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACH,OAFqB,EAEnB,GAFmB,CAAtB;AAGH,KAJD,MAKK;AACDC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAV,MAAAA,KAAK,CAACc,IAAN,CAAWR,UAAX;AACH;;AACD,WAAO,MAAM;AACTO,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAFD;AAGH,GAfD,EAeG,CAACH,MAAD,CAfH;;AAmBA,MAAIA,MAAM,IAAIF,OAAO,KAAKH,CAA1B,EAA6B;AACzB;AACAM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH;;AAED,QAAMO,KAAK,GAAG,MAAM;AAChB,QAAIb,CAAC,GAAG,GAAR,EAAa;AAAEF,MAAAA,KAAK,CAACc,IAAN;AAAc;AAAS;;AACtCE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,CAApC;AACA,QAAIF,KAAK,CAACkB,IAAN,IAAclB,KAAK,CAACmB,aAAxB,EACIX,SAAS,CAAC,IAAD,CAAT;AACP,GALD;;AAOA,QAAMY,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAE,iBADS;;AAEjB;;AACA;AACAC,IAAAA,eAAe,EAAE,kBAJA;AAKjBC,IAAAA,YAAY,EAAE,KALG;AAMjBC,IAAAA,MAAM,EAAE,wBANS;AAOjBC,IAAAA,YAAY,EAAE5B,KAAK,CAACQ,OAAD,CAPF;AAQjBqB,IAAAA,eAAe,EAAE5B,KAAK,CAACO,OAAD,CARL,CASjB;;AATiB,GAArB;AAaA,sBACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,KAAK,EAAEe,YAFX;AAGI,IAAA,SAAS,EAAEpB,KAAK,CAACkB,IAAN,IAAclB,KAAK,CAACmB,aAApB,GAAoC,UAApC,GAAiD,EAHhE;AAII,IAAA,OAAO,EAAEJ;AAJb;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7DD;;GAAMhB,K;;KAAAA,K;AA8DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport './Board.css'\nimport { x_val, y_val } from \"../functions\";\n\n\nconst Green = (props) => {\n\n    var speed\n    var z = props.position.z + props.dice_val;\n    const [counter, setCounter] = React.useState(props.position.z);\n    const [moveOn, setMoveOn] = useState(false);\n\n    React.useEffect(() => {\n        let interval = null;\n\n        if (moveOn) {\n            interval = setInterval(() => {\n                setCounter((prevCounter) => prevCounter + 1);\n            }, 400);\n        }\n        else {\n            clearInterval(interval);\n            props.move(setCounter);\n        }\n        return () => {\n            clearInterval(interval);\n        };\n    }, [moveOn]);\n\n\n\n    if (moveOn && counter === z) {\n        // console.log(\"entered\");\n        setMoveOn(false);\n    }\n\n    const slide = () => {\n        if (z > 100) { props.move(); return; }\n        console.log(\"clicked & dice_val: \", z);\n        if (props.turn && props.enter_enabled)\n            setMoveOn(true);\n    }\n\n    const Green_marker = {\n        margin: '35% 40% 15% 10%',\n        /* margin: 25% 10% 15% 30%; */\n        /* position: absolute; */\n        backgroundColor: 'rgb(14, 221, 66)',\n        borderRadius: '50%',\n        border: '1px solid rgb(0, 0, 0)',\n        gridRowStart: x_val(counter),\n        gridColumnStart: y_val(counter),\n        // transition: \"all 2s ease-in\"\n    };\n\n\n    return (\n        <div\n            id='pos1'\n            style={Green_marker}\n            className={props.turn && props.enter_enabled ? \"blinker1\" : \"\"}\n            onClick={slide}\n        />\n\n\n    );\n}\nexport default Green"]},"metadata":{},"sourceType":"module"}