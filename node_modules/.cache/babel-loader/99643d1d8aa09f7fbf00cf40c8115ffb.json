{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/my-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport { x_val, y_val, check } from './functions';\nimport Counter from './components/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let speed = 400;\n  var intervalId1;\n  const [turn, setTurn] = useState(true);\n  const [dice_val, setDice_val] = useState(\"...\");\n  const [space_enabled, setSpace_enabled] = useState(true);\n  const [enter_enabled, setEnter_enabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n\n  const rollDice = () => {\n    setDice_val(Math.round(1 + 5 * Math.random()));\n    setEnter_enabled(true);\n  };\n\n  const move1 = setCounter => {\n    let z = player1 + dice_val;\n    let c = check(z);\n    if (!turn || !enter_enabled) return;\n\n    if (z <= 100) {\n      setPlayer1(z);\n\n      if (z === 100) {\n        setTimeout(() => {\n          alert(\"Green has won the match!! Refresh to Restart.\");\n        }, speed);\n      }\n\n      if (c) {\n        setTimeout(() => {\n          setPlayer1(c);\n          setCounter(c);\n        }, speed);\n      }\n    } // console.log(turn);\n\n\n    setEnter_enabled(false);\n    setSpace_enabled(true);\n    setTurn(false);\n    setDice_val(\"...\");\n  };\n\n  const move2 = setCounter => {\n    let z = player2 + dice_val;\n    let c = check(z);\n    if (turn || !enter_enabled) return;\n\n    if (z <= 100) {\n      setPlayer2({\n        x: x_val(player2.z + dice_val),\n        y: y_val(player2.z + dice_val),\n        z: player2.z + dice_val\n      });\n\n      if (z == 100) {\n        setTimeout(() => {\n          alert(\"Red has won the match!! Refresh to Restart.\");\n        }, speed);\n      }\n\n      if (c) {\n        setTimeout(() => {\n          setPlayer2({\n            x: x_val(c),\n            y: y_val(c),\n            z: c\n          });\n          setCounter(c);\n        }, speed);\n      }\n    }\n\n    setEnter_enabled(false);\n    setSpace_enabled(true);\n    setTurn(true);\n    setDice_val(\"...\");\n  };\n\n  const Clicked = () => {\n    if (space_enabled) {\n      setSpace_enabled(false);\n      rollDice();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Intro, {\n      turn: turn,\n      dice_val: dice_val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      turn: turn,\n      enter_enabled: enter_enabled,\n      player1: player1,\n      player2: player2,\n      move1: move1,\n      move2: move2,\n      dice_val: dice_val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      turn: turn,\n      dice_val: dice_val,\n      onClickRollDice: Clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v+C8IJyfEujDC1tZ3pTZk9kOwc0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/my-game/src/App.js"],"names":["React","useState","Intro","Board","Button","x_val","y_val","check","Counter","App","speed","intervalId1","turn","setTurn","dice_val","setDice_val","space_enabled","setSpace_enabled","enter_enabled","setEnter_enabled","player1","setPlayer1","player2","setPlayer2","rollDice","Math","round","random","move1","setCounter","z","c","setTimeout","alert","move2","x","y","Clicked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport {x_val, y_val, check} from './functions';\nimport Counter from './components/Counter';\n\nfunction App() {\n  let speed = 400;\n  var intervalId1;\n  const [turn, setTurn] = useState(true);\n  const [dice_val, setDice_val] = useState(\"...\");\n  const [space_enabled, setSpace_enabled] = useState(true);\n  const [enter_enabled, setEnter_enabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n  \n  const rollDice = ()=>{\n    setDice_val(Math.round(1+(5)*Math.random()));\n    setEnter_enabled(true);\n  }\n\n  const move1 = (setCounter) =>{\n    let z = player1 + dice_val;\n    let c = check(z);\n    if(!turn || !enter_enabled) return;\n\n    if(z<=100){ \n      setPlayer1(z);\n      if(z===100){\n        setTimeout(() => {\n          alert(\"Green has won the match!! Refresh to Restart.\");\n        }, speed);\n      }\n      if(c){\n        setTimeout(() => {\n          setPlayer1(c);\n          setCounter(c);\n        }, speed);\n      }\n    }\n    // console.log(turn);\n    setEnter_enabled(false);\n    setSpace_enabled(true);\n    setTurn(false);\n    setDice_val(\"...\");\n  }\n  const move2 = (setCounter) =>{\n    let z = player2 +dice_val;\n    let c = check(z);\n    if(turn || !enter_enabled)return;\n    if(z<=100){\n      setPlayer2({\n        x: x_val(player2.z + dice_val),\n        y: y_val(player2.z + dice_val),\n        z: player2.z + dice_val\n      });\n      if(z==100){\n        setTimeout(() => {\n          alert(\"Red has won the match!! Refresh to Restart.\");\n        }, speed);\n      }\n      if(c){\n        setTimeout(() => {\n          setPlayer2({\n            x: x_val(c),\n            y: y_val(c),\n            z: c\n          });\n          setCounter(c);\n        }, speed);\n      }\n    } \n    setEnter_enabled(false);\n    setSpace_enabled(true);\n    setTurn(true);\n    setDice_val(\"...\");\n  }\n\n  const Clicked = () => {\n    if(space_enabled){\n      setSpace_enabled(false);\n      rollDice();      \n    }\n  }\n\n  return (\n    <div>\n      <Counter/>\n      <Intro turn={turn} dice_val={dice_val}/>\n      <Board \n        turn={turn} \n        enter_enabled={enter_enabled} \n        player1={player1} \n        player2={player2}\n        move1={move1}\n        move2={move2}\n        dice_val={dice_val}\n      />\n      <Button turn={turn} dice_val={dice_val} onClickRollDice={Clicked}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}