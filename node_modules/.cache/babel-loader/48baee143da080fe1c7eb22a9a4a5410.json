{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/my-game/src/components/Green.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Green = props => {\n  var _s = $RefreshSig$();\n\n  // function lets_move (){\n  //     console.log(limit, z, counter);\n  //     if(limit===z){\n  //         window.clearInterval(intervalId1);\n  //         console.log(\"inside\");\n  //     }\n  //     limit = (limit+1);\n  //     setCounter(limit);\n  // }\n  // // const [limit, setLimit] = useState(0);\n  // let limit = 1;\n  // const [counter, setCounter] = useState(1);\n  // const intervalId1 = setInterval(lets_move, 3000);\n  // var z = 6;\n  const Green_marker = {\n    margin: '35% 40% 15% 10%',\n\n    /* margin: 25% 10% 15% 30%; */\n\n    /* position: absolute; */\n    backgroundColor: 'rgb(14, 221, 66)',\n    borderRadius: '50%',\n    border: '1px solid rgb(0, 0, 0)',\n    gridRowStart: props.position.x,\n    gridColumnStart: props.position.y,\n    transition: \"all 2s ease-in\"\n  };\n\n  function Counter() {\n    _s();\n\n    const [counter, setCounter] = React.useState(0);\n    React.useEffect(() => {\n      const timer = setInterval(() => {\n        setCounter(prevCount => prevCount + 1); // <-- Change this line!\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }, []); // Pass in empty array to run effect only once!\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s(Counter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pos1\",\n    style: Green_marker,\n    className: props.turn && props.enter_enabled ? \"blinker1\" : \"\",\n    onClick: props.move\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Green;\nexport default Green;\n\nvar _c;\n\n$RefreshReg$(_c, \"Green\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/my-game/src/components/Green.js"],"names":["React","useState","Green","props","Green_marker","margin","backgroundColor","borderRadius","border","gridRowStart","position","x","gridColumnStart","y","transition","Counter","counter","setCounter","useEffect","timer","setInterval","prevCount","clearInterval","turn","enter_enabled","move"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP;;;AAMA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAIrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAC,iBADU;;AAEjB;;AACA;AACAC,IAAAA,eAAe,EAAE,kBAJA;AAKjBC,IAAAA,YAAY,EAAE,KALG;AAMjBC,IAAAA,MAAM,EAAE,wBANS;AAOjBC,IAAAA,YAAY,EAAEN,KAAK,CAACO,QAAN,CAAeC,CAPZ;AAQjBC,IAAAA,eAAe,EAAET,KAAK,CAACO,QAAN,CAAeG,CARf;AASjBC,IAAAA,UAAU,EAAE;AATK,GAArB;;AAWA,WAASC,OAAT,GAAmB;AAAA;;AACf,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,KAAK,CAACC,QAAN,CAAe,CAAf,CAA9B;AACAD,IAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,YAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BH,QAAAA,UAAU,CAACI,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAV,CAD8B,CACU;AACzC,OAFwB,EAEtB,IAFsB,CAAzB;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,KAAD,CAAb;AACD,OAFD;AAGD,KAPD,EAOG,EAPH,EAFe,CASP;;AAER,wBACE;AAAA,4BAAaH,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA/CkB,KAiCZD,OAjCY;;AAiDrB,sBACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,KAAK,EAAEX,YAFX;AAGI,IAAA,SAAS,EAAED,KAAK,CAACoB,IAAN,IAAcpB,KAAK,CAACqB,aAApB,GAAmC,UAAnC,GAA8C,EAH7D;AAII,IAAA,OAAO,EAAErB,KAAK,CAACsB;AAJnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3DD;;KAAMvB,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport './Board.css'\n\n\n\n\n\nconst Green = (props) => {\n\n    \n\n    // function lets_move (){\n    //     console.log(limit, z, counter);\n    //     if(limit===z){\n    //         window.clearInterval(intervalId1);\n    //         console.log(\"inside\");\n    //     }\n    //     limit = (limit+1);\n    //     setCounter(limit);\n    // }\n\n\n    // // const [limit, setLimit] = useState(0);\n    // let limit = 1;\n    // const [counter, setCounter] = useState(1);\n    // const intervalId1 = setInterval(lets_move, 3000);\n    // var z = 6;\n\n    \n    const Green_marker = {\n        margin:'35% 40% 15% 10%',\n        /* margin: 25% 10% 15% 30%; */\n        /* position: absolute; */\n        backgroundColor: 'rgb(14, 221, 66)',\n        borderRadius: '50%',\n        border: '1px solid rgb(0, 0, 0)',\n        gridRowStart: props.position.x,\n        gridColumnStart: props.position.y,\n        transition: \"all 2s ease-in\"\n    };\n    function Counter() {\n        const [counter, setCounter] = React.useState(0);\n        React.useEffect(() => {\n          const timer = setInterval(() => {\n            setCounter(prevCount => prevCount + 1); // <-- Change this line!\n          }, 1000);\n          return () => {\n            clearInterval(timer);\n          };\n        }, []); // Pass in empty array to run effect only once!\n      \n        return (\n          <div>Count: {counter}</div>\n        );\n      }\n      \n    return(\n        <div \n            id='pos1'\n            style={Green_marker}\n            className={props.turn && props.enter_enabled ?\"blinker1\":\"\"}\n            onClick={props.move}\n        />\n\n\n    );\n}\nexport default Green"]},"metadata":{},"sourceType":"module"}