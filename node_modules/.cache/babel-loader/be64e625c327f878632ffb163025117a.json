{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/git/React_Practice/my-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport { x_val, y_val, check, move_green, move_red } from './functions';\nimport Counter from './components/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyCoins = [{\n  id: 'green',\n  margin: '35% 40% 15% 10%',\n  backgroundColor: 'rgb(14, 221, 66)'\n}, {\n  id: 'red',\n  margin: '35% 10% 15% 40%',\n  backgroundColor: 'rgb(241, 34, 34)'\n}, {\n  id: 'blue',\n  margin: '15% 25% 35% 25%',\n  backgroundColor: 'blue'\n}, {\n  id: 'yellow',\n  margin: '45% 25% 5% 25%',\n  backgroundColor: 'yellow'\n}];\n\nfunction App() {\n  _s();\n\n  const [N, setN] = useState(0);\n  React.useEffect(() => {\n    if (!N) {\n      let n = 0;\n\n      while (n != 2 && n != 3 && n != 4) n = prompt(\"Enter the number of players from 2 to 4\", \"2\");\n\n      setN(n);\n    }\n  }, [N]);\n  let speed = 200;\n  const [turn, setTurn] = useState(true);\n  const [diceVal, setDiceVal] = useState(\"...\");\n  const [spaceEnabled, setSpaceEnabled] = useState(true);\n  const [enterEnabled, setEnterEnabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n  const [positions, setPositions] = useState([1, 1, 1, 1]);\n  let variables = {\n    turn: turn,\n    setTurn: setTurn,\n    diceVal: diceVal,\n    setDiceVal: setDiceVal,\n    spaceEnabled: spaceEnabled,\n    enterEnabled: enterEnabled,\n    setEnterEnabled: setEnterEnabled,\n    setSpaceEnabled: setSpaceEnabled,\n    player1: player1,\n    player2: player2,\n    setPlayer1: setPlayer1,\n    setPlayer2: setPlayer2,\n    speed: speed,\n    N: N,\n    positions: positoins\n  };\n\n  const rollDice = () => {\n    setDiceVal(Math.round(1 + 5 * Math.random())); // setDiceVal(6);\n\n    setEnterEnabled(true);\n  };\n\n  const move = setCounter => {\n    if (turn) move_green(variables, setCounter);else move_red(variables, setCounter);\n  };\n\n  const Clicked = () => {\n    if (spaceEnabled) {\n      setSpaceEnabled(false);\n      rollDice();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Intro, {\n      turn: turn,\n      diceVal: diceVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      turn: turn,\n      enterEnabled: enterEnabled,\n      player1: player1,\n      player2: player2,\n      move: move,\n      diceVal: diceVal,\n      speed: speed,\n      coins: dummyCoins,\n      N: N\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      turn: turn,\n      diceVal: diceVal,\n      onClickRollDice: Clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rfIwqMIsZPC3klDWEsDyUDiARzM=\");\n\n_c = App;\nexport default App; // const move1 = (setCounter) =>{\n//   let z = player1 + diceVal;\n//   let c = check(z);\n//   if(!turn || !enterEnabled) return;\n//   if(z<=100){ \n//     setPlayer1(z);\n//     if(z===100){\n//       setTimeout(() => {\n//         alert(\"Green has won the match!! Refresh to Restart.\");\n//       }, speed);\n//     }\n//     if(c){\n//       setTimeout(() => {\n//         setPlayer1(c);\n//         setCounter(c);\n//       }, speed);\n//     }\n//   }\n//   setEnterEnabled(false);\n//   setSpaceEnabled(true);\n//   setTurn(false);\n//   setDiceVal(\"...\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/git/React_Practice/my-game/src/App.js"],"names":["React","useState","Intro","Board","Button","x_val","y_val","check","move_green","move_red","Counter","dummyCoins","id","margin","backgroundColor","App","N","setN","useEffect","n","prompt","speed","turn","setTurn","diceVal","setDiceVal","spaceEnabled","setSpaceEnabled","enterEnabled","setEnterEnabled","player1","setPlayer1","player2","setPlayer2","positions","setPositions","variables","positoins","rollDice","Math","round","random","move","setCounter","Clicked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport {x_val, y_val, check, move_green, move_red} from './functions';\nimport Counter from './components/Counter';\n\n\nconst dummyCoins = [\n  {\n    id: 'green',\n    margin: '35% 40% 15% 10%',\n    backgroundColor: 'rgb(14, 221, 66)',\n  },\n  {\n    id: 'red',\n    margin:'35% 10% 15% 40%',\n    backgroundColor: 'rgb(241, 34, 34)',\n  },\n  {\n    id: 'blue',\n    margin: '15% 25% 35% 25%',\n    backgroundColor: 'blue',\n  },\n  {\n    id: 'yellow',\n    margin: '45% 25% 5% 25%',\n    backgroundColor: 'yellow',\n  }\n];\n\nfunction App() {\n\n\n  const [N, setN] = useState(0);\n  \n  \n  React.useEffect(() => {\n    if(!N){\n      let n = 0;\n      while((n!=2) && (n!=3) && (n!=4))\n        n = prompt(\"Enter the number of players from 2 to 4\", \"2\");\n      setN(n);\n    }\n  }, [N]);\n\n  \n  let speed = 200;\n  const [turn, setTurn] = useState(true);\n  const [diceVal, setDiceVal] = useState(\"...\");\n  const [spaceEnabled, setSpaceEnabled] = useState(true);\n  const [enterEnabled, setEnterEnabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n  const [positions, setPositions] = useState([1,1,1,1]);\n\n  let variables = {\n    turn: turn,\n    setTurn: setTurn,\n    diceVal: diceVal,\n    setDiceVal: setDiceVal,\n    spaceEnabled: spaceEnabled,\n    enterEnabled: enterEnabled,\n    setEnterEnabled: setEnterEnabled,\n    setSpaceEnabled: setSpaceEnabled,\n    player1: player1,\n    player2: player2,\n    setPlayer1: setPlayer1,\n    setPlayer2: setPlayer2,\n    speed: speed, \n    N:N,\n    positions: positoins,\n  }\n  \n  const rollDice = ()=>{\n    setDiceVal(Math.round(1+(5)*Math.random()));\n    // setDiceVal(6);\n    setEnterEnabled(true);\n  }\n\n  const move = (setCounter) => {\n    if(turn)\n      move_green(variables, setCounter);\n    else\n      move_red(variables, setCounter);\n  }\n\n  const Clicked = () => {\n    if(spaceEnabled){\n      setSpaceEnabled(false);\n      rollDice();      \n    }\n  }\n\n  return (\n    <div>\n      <Intro turn={turn} diceVal={diceVal}/>\n      <Board \n        turn={turn} \n        enterEnabled={enterEnabled} \n        player1={player1} \n        player2={player2}\n        move = {move}\n        diceVal={diceVal}\n        speed = {speed}\n        coins={dummyCoins}\n        N = {N}\n      />\n      <Button turn={turn} diceVal={diceVal} onClickRollDice={Clicked}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// const move1 = (setCounter) =>{\n//   let z = player1 + diceVal;\n//   let c = check(z);\n//   if(!turn || !enterEnabled) return;\n\n//   if(z<=100){ \n//     setPlayer1(z);\n//     if(z===100){\n//       setTimeout(() => {\n//         alert(\"Green has won the match!! Refresh to Restart.\");\n//       }, speed);\n//     }\n//     if(c){\n//       setTimeout(() => {\n//         setPlayer1(c);\n//         setCounter(c);\n//       }, speed);\n//     }\n//   }\n  \n//   setEnterEnabled(false);\n//   setSpaceEnabled(true);\n//   setTurn(false);\n//   setDiceVal(\"...\");\n// }"]},"metadata":{},"sourceType":"module"}