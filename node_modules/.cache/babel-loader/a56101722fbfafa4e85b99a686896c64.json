{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/my-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport { x_val, y_val, check, move_green, move_red } from './functions';\nimport Counter from './components/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let speed = 400;\n  const [turn, setTurn] = useState(true);\n  const [dice_val, setDice_val] = useState(\"...\");\n  const [space_enabled, setSpace_enabled] = useState(true);\n  const [enter_enabled, setEnter_enabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n  let variables = {\n    turn: turn,\n    setTurn: setTurn,\n    dice_val: dice_val,\n    setDice_val: setDice_val,\n    space_enabled: space_enabled,\n    enter_enabled: enter_enabled,\n    setEnter_enabled: setEnter_enabled,\n    setSpace_enabled: setSpace_enabled,\n    player1: player1,\n    player2: player2,\n    setPlayer1: setPlayer1,\n    setPlayer2: setPlayer2,\n    speed: speed\n  };\n\n  const rollDice = () => {\n    setDice_val(Math.round(1 + 5 * Math.random())); // setDice_val(6);\n\n    setEnter_enabled(true);\n  };\n\n  const move = setCounter => {\n    if (turn) move_green(variables, setCounter);else move_red(variables, setCounter);\n  };\n\n  const Clicked = () => {\n    if (space_enabled) {\n      setSpace_enabled(false);\n      rollDice();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Intro, {\n      turn: turn,\n      dice_val: dice_val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      turn: turn,\n      enter_enabled: enter_enabled,\n      player1: player1,\n      player2: player2,\n      move: move,\n      dice_val: dice_val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      turn: turn,\n      dice_val: dice_val,\n      onClickRollDice: Clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v+C8IJyfEujDC1tZ3pTZk9kOwc0=\");\n\n_c = App;\nexport default App; // const move1 = (setCounter) =>{\n//   let z = player1 + dice_val;\n//   let c = check(z);\n//   if(!turn || !enter_enabled) return;\n//   if(z<=100){ \n//     setPlayer1(z);\n//     if(z===100){\n//       setTimeout(() => {\n//         alert(\"Green has won the match!! Refresh to Restart.\");\n//       }, speed);\n//     }\n//     if(c){\n//       setTimeout(() => {\n//         setPlayer1(c);\n//         setCounter(c);\n//       }, speed);\n//     }\n//   }\n//   setEnter_enabled(false);\n//   setSpace_enabled(true);\n//   setTurn(false);\n//   setDice_val(\"...\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/my-game/src/App.js"],"names":["React","useState","Intro","Board","Button","x_val","y_val","check","move_green","move_red","Counter","App","speed","turn","setTurn","dice_val","setDice_val","space_enabled","setSpace_enabled","enter_enabled","setEnter_enabled","player1","setPlayer1","player2","setPlayer2","variables","rollDice","Math","round","random","move","setCounter","Clicked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport Intro from './components/Intro';\nimport Board from './components/Board';\nimport Button from './components/Button';\nimport {x_val, y_val, check, move_green, move_red} from './functions';\nimport Counter from './components/Counter';\n\nfunction App() {\n  let speed = 400;\n  const [turn, setTurn] = useState(true);\n  const [dice_val, setDice_val] = useState(\"...\");\n  const [space_enabled, setSpace_enabled] = useState(true);\n  const [enter_enabled, setEnter_enabled] = useState(false);\n  const [player1, setPlayer1] = useState(1);\n  const [player2, setPlayer2] = useState(1);\n\n  let variables = {\n    turn: turn,\n    setTurn: setTurn,\n    dice_val: dice_val,\n    setDice_val: setDice_val,\n    space_enabled: space_enabled,\n    enter_enabled: enter_enabled,\n    setEnter_enabled: setEnter_enabled,\n    setSpace_enabled: setSpace_enabled,\n    player1: player1,\n    player2: player2,\n    setPlayer1: setPlayer1,\n    setPlayer2: setPlayer2,\n    speed: speed\n  }\n  \n  const rollDice = ()=>{\n    setDice_val(Math.round(1+(5)*Math.random()));\n    // setDice_val(6);\n    setEnter_enabled(true);\n  }\n\n  const move = (setCounter) => {\n    if(turn)\n      move_green(variables, setCounter);\n    else\n      move_red(variables, setCounter);\n  }\n\n  const Clicked = () => {\n    if(space_enabled){\n      setSpace_enabled(false);\n      rollDice();      \n    }\n  }\n\n  return (\n    <div>\n      <Intro turn={turn} dice_val={dice_val}/>\n      <Board \n        turn={turn} \n        enter_enabled={enter_enabled} \n        player1={player1} \n        player2={player2}\n        move = {move}\n        dice_val={dice_val}\n      />\n      <Button turn={turn} dice_val={dice_val} onClickRollDice={Clicked}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// const move1 = (setCounter) =>{\n//   let z = player1 + dice_val;\n//   let c = check(z);\n//   if(!turn || !enter_enabled) return;\n\n//   if(z<=100){ \n//     setPlayer1(z);\n//     if(z===100){\n//       setTimeout(() => {\n//         alert(\"Green has won the match!! Refresh to Restart.\");\n//       }, speed);\n//     }\n//     if(c){\n//       setTimeout(() => {\n//         setPlayer1(c);\n//         setCounter(c);\n//       }, speed);\n//     }\n//   }\n  \n//   setEnter_enabled(false);\n//   setSpace_enabled(true);\n//   setTurn(false);\n//   setDice_val(\"...\");\n// }"]},"metadata":{},"sourceType":"module"}