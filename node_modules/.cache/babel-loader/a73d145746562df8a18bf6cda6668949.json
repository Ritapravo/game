{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/my-game/src/components/Red.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { x_val, y_val } from \"../functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Red = props => {\n  _s();\n\n  var speed = props.speed;\n  var z = props.position + props.dice_val;\n  const [counter, setCounter] = React.useState(props.position);\n  const [moveOn, setMoveOn] = useState(false);\n  React.useEffect(() => {\n    let interval = null;\n\n    if (moveOn) {\n      interval = setInterval(() => {\n        setCounter(prevCounter => prevCounter + 1);\n      }, speed);\n    } else {\n      clearInterval(interval);\n      props.move(setCounter);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [moveOn]);\n\n  if (moveOn && counter === z) {\n    setMoveOn(false);\n  }\n\n  const slide = () => {\n    if (z > 100) {\n      props.move();\n      return;\n    }\n\n    if (props.turn && props.enterEnabled) setMoveOn(true);\n  };\n\n  const Red_marker = {\n    margin: '35% 10% 15% 40%',\n    backgroundColor: 'rgb(241, 34, 34)',\n    borderRadius: '50%',\n    border: '1px solid rgb(0, 0, 0)',\n    gridRowStart: x_val(counter),\n    gridColumnStart: y_val(counter)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pos2\",\n    style: Red_marker,\n    className: props.turn && props.enterEnabled ? \"blinker2\" : \"\",\n    onClick: slide\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Red, \"nfBV8tKoLXzZGK9KAk3A9Kycdh0=\");\n\n_c = Red;\nexport default Red;\n\nvar _c;\n\n$RefreshReg$(_c, \"Red\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/my-game/src/components/Red.js"],"names":["React","useState","x_val","y_val","Red","props","speed","z","position","dice_val","counter","setCounter","moveOn","setMoveOn","useEffect","interval","setInterval","prevCounter","clearInterval","move","slide","turn","enterEnabled","Red_marker","margin","backgroundColor","borderRadius","border","gridRowStart","gridColumnStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,cAA7B;;;AAIA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAEnB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACG,QAAN,GAAiBH,KAAK,CAACI,QAA/B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACC,QAAN,CAAeI,KAAK,CAACG,QAArB,CAA9B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIH,MAAJ,EAAY;AACRG,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzBL,QAAAA,UAAU,CAAEM,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACH,OAFqB,EAEnBX,KAFmB,CAAtB;AAGH,KAJD,MAKK;AACDY,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAV,MAAAA,KAAK,CAACc,IAAN,CAAWR,UAAX;AACH;;AACD,WAAO,MAAM;AACTO,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAFD;AAGH,GAdD,EAcG,CAACH,MAAD,CAdH;;AAgBA,MAAIA,MAAM,IAAIF,OAAO,KAAKH,CAA1B,EAA6B;AACzBM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH;;AAED,QAAMO,KAAK,GAAG,MAAM;AAChB,QAAIb,CAAC,GAAG,GAAR,EAAa;AAAEF,MAAAA,KAAK,CAACc,IAAN;AAAc;AAAS;;AAEtC,QAAId,KAAK,CAACgB,IAAN,IAAchB,KAAK,CAACiB,YAAxB,EACIT,SAAS,CAAC,IAAD,CAAT;AACP,GALD;;AAOA,QAAMU,UAAU,GAAG;AACfC,IAAAA,MAAM,EAAC,iBADQ;AAEfC,IAAAA,eAAe,EAAE,kBAFF;AAGfC,IAAAA,YAAY,EAAE,KAHC;AAIfC,IAAAA,MAAM,EAAE,wBAJO;AAKfC,IAAAA,YAAY,EAAE1B,KAAK,CAACQ,OAAD,CALJ;AAMfmB,IAAAA,eAAe,EAAE1B,KAAK,CAACO,OAAD;AANP,GAAnB;AAUA,sBACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,KAAK,EAAEa,UAFX;AAGI,IAAA,SAAS,EAAElB,KAAK,CAACgB,IAAN,IAAchB,KAAK,CAACiB,YAApB,GAAkC,UAAlC,GAA6C,EAH5D;AAII,IAAA,OAAO,EAAEF;AAJb;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApDD;;GAAMhB,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { x_val, y_val } from \"../functions\";\n\n\n\nconst Red = (props) => {\n\n    var speed = props.speed;\n    var z = props.position + props.dice_val;\n    const [counter, setCounter] = React.useState(props.position);\n    const [moveOn, setMoveOn] = useState(false);\n\n    React.useEffect(() => {\n        let interval = null;\n        if (moveOn) {\n            interval = setInterval(() => {\n                setCounter((prevCounter) => prevCounter + 1);\n            }, speed);\n        }\n        else {\n            clearInterval(interval);\n            props.move(setCounter);\n        }\n        return () => {\n            clearInterval(interval);\n        };\n    }, [moveOn]);\n\n    if (moveOn && counter === z) {        \n        setMoveOn(false);\n    }\n\n    const slide = () => {\n        if (z > 100) { props.move(); return; }\n        \n        if (props.turn && props.enterEnabled)\n            setMoveOn(true);\n    }\n    \n    const Red_marker = {\n        margin:'35% 10% 15% 40%',\n        backgroundColor: 'rgb(241, 34, 34)',\n        borderRadius: '50%',\n        border: '1px solid rgb(0, 0, 0)',\n        gridRowStart: x_val(counter),\n        gridColumnStart: y_val(counter),\n    };\n    \n    \n    return(\n        <div \n            id='pos2'\n            style={Red_marker}\n            className={props.turn && props.enterEnabled ?\"blinker2\":\"\"}\n            onClick={slide}\n        />\n    );\n}\nexport default Red"]},"metadata":{},"sourceType":"module"}